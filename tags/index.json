[{"content":"1. Kiến thức cần có Trước khi bắt đầu với bài viết này, vui lòng chắc chắn rằng bạn có kiến thức về Python. Các thư viện cần thiết như:\n Pandas Numpy Sklearn  2. Các bước để làm một bài toán ML Hầu hết toàn bộ bài toán về Machine Learning đều trải qua các bước cơ bản sau: ( Mình sẽ không nói sâu về từng bước, các bạn cần tìm hiểu thêm nhé)\n Xác định vấn đề. Chuẩn bị dữ liệu Đánh giá thuật toán Cải thiện kết quả Hiển thị kết quả dự đoán  3. Bài toán Machine Learning Các bước chính để chúng ta xây dựng bài toán như sau:\n Cài đặt Python và SciPy platform. Tải dữ liệu về Hiểu dữ liệu Trực quan hóa dữ liệu Đánh giá một số thuật toán Dự đoán kết quả\nBây giờ chúng ta bắt đầu nhé.  3.1. Cài đặt thư viện cần thiết Các bạn tự cài đặt Python ( 3.x) và các thư viện sau:\n scipy numpy matplotlib pandas sklearn\nViệc cài đặt các thự viện này rất đơn giản nên các bạn tự tìm hiểu.\nCài đặt scipy tại đây\nSau khi các bạn cài xong thì các bạn test xem đã thành công hay chưa:  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  # Python version\r import sys\rprint(\u0026#39;Python: {}\u0026#39;.format(sys.version))\r# scipy\r import scipy\rprint(\u0026#39;scipy: {}\u0026#39;.format(scipy.__version__))\r# numpy\r import numpy\rprint(\u0026#39;numpy: {}\u0026#39;.format(numpy.__version__))\r# matplotlib\r import matplotlib\rprint(\u0026#39;matplotlib: {}\u0026#39;.format(matplotlib.__version__))\r# pandas\r import pandas\rprint(\u0026#39;pandas: {}\u0026#39;.format(pandas.__version__))\r# scikit-learn\r import sklearn\rprint(\u0026#39;sklearn: {}\u0026#39;.format(sklearn.__version__))\r  Nếu các bạn đã cài thành công thì kết quả có dạng thế này:\nPython: 3.6.9 (default, Oct 19 2019, 05:21:45) [GCC 4.2.1 Compatible Apple LLVM 9.1.0 (clang-902.0.39.2)]\nscipy: 1.3.1\nnumpy: 1.17.3\nmatplotlib: 3.1.1\npandas: 0.25.1\nsklearn: 0.21.3\n*Còn nếu các bạn cài đặt bị lỗi thì có thể fix lỗi tại đây.\n3.2. Tải dữ liệu Trng bài viết này chúng ta sẽ sử dụng dữ liệu có sẵn trên google.\nCác bạn có thể tìm hiểu dữ liệu tại đây.\n3.2.1. import các thư viện cần thiết Tiếp theo chúng ta sẽ import các thư viện dưới đây để sự dụng trong bài toán.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  # Load libraries\r from pandas import read_csv\rfrom pandas.plotting import scatter_matrix\rfrom matplotlib import pyplot\rfrom sklearn.model_selection import train_test_split\rfrom sklearn.model_selection import cross_val_score\rfrom sklearn.model_selection import StratifiedKFold\rfrom sklearn.metrics import classification_report\rfrom sklearn.metrics import confusion_matrix\rfrom sklearn.metrics import accuracy_score\rfrom sklearn.linear_model import LogisticRegression\rfrom sklearn.tree import DecisionTreeClassifier\rfrom sklearn.neighbors import KNeighborsClassifier\rfrom sklearn.discriminant_analysis import LinearDiscriminantAnalysis\rfrom sklearn.naive_bayes import GaussianNB\rfrom sklearn.svm import SVC\r  3.2.2. Tải dữ liệu về Chúng ta sẽ sử dụng pandas để tải dữ liệu về. Và cũng sẽ sử dụng pandas để khai phá và trực quan hóa dữ liệu.\n1 2 3 4  # Load dataset\r url = \u0026#34;https://raw.githubusercontent.com/jbrownlee/Datasets/master/iris.csv\u0026#34;\rnames = [\u0026#39;sepal-length\u0026#39;, \u0026#39;sepal-width\u0026#39;, \u0026#39;petal-length\u0026#39;, \u0026#39;petal-width\u0026#39;, \u0026#39;class\u0026#39;]\rdataset = read_csv(url, names=names)\r  Nếu các bạn gặp lỗi khi load thì bạn có thể download iris.csv.\n3.3. Khai phá dữ liệu Bây giờ chúng ta xem dữ liệu nó có gì nhé.\n*Chúng ta sẽ thực hiện một số cách tiếp cận dưới đây:\n Chiều của dữ liệu Tổng quan về dữ liệu Thống kê tất cả các thuộc tính của dữ liệu Phân bố của dữ liệu\nChúng ta đi vào chi tiết:  3.3.1. Chiều của dữ liệu Chiều của dữ liệu cho chúng ta biết là có bao nhiều hàng và bao nhiêu cột của toàn bộ dữ liệu.\nprint(dataset.shape) Chúng ta sẽ thấy là 150 hàng và 5 cột. Có nghĩa là có 50 điểm dữ liệu và 4 features, 1 class chín là nhãn mà model cần dự đoán.\n(150,5)\n3.3.2. Tổng quan dữ liệu Bây giờ chúng ta sẽ xem rõ hơn về dữ liệu nhé. Để xem chúng ta chỉ cần dùng head như sau:\nprint(dataset.head(20))\nChúng sẽ hiển thị 20 hàng đầu tiên của toàn bộ dữ liệu.\nsepal-length sepal-width petal-length petal-width class\n0 5.1 3.5 1.4 0.2 Iris-setosa\n1 4.9 3.0 1.4 0.2 Iris-setosa\n2 4.7 3.2 1.3 0.2 Iris-setosa\n3 4.6 3.1 1.5 0.2 Iris-setosa\n4 5.0 3.6 1.4 0.2 Iris-setosa\n5 5.4 3.9 1.7 0.4 Iris-setosa\n6 4.6 3.4 1.4 0.3 Iris-setosa\n7 5.0 3.4 1.5 0.2 Iris-setosa\n8 4.4 2.9 1.4 0.2 Iris-setosa\n9 4.9 3.1 1.5 0.1 Iris-setosa\n10 5.4 3.7 1.5 0.2 Iris-setosa\n11 4.8 3.4 1.6 0.2 Iris-setosa\n12 4.8 3.0 1.4 0.1 Iris-setosa\n13 4.3 3.0 1.1 0.1 Iris-setosa\n14 5.8 4.0 1.2 0.2 Iris-setosa\n15 5.7 4.4 1.5 0.4 Iris-setosa\n16 5.4 3.9 1.3 0.4 Iris-setosa\n17 5.1 3.5 1.4 0.3 Iris-setosa\n18 5.7 3.8 1.7 0.3 Iris-setosa\n19 5.1 3.8 1.5 0.3 Iris-setosa\nCác feature của dữ liệu bao gồm: chiều dài đài hoa (sepal-length), chiều rộng đài hoa(sepal-width ), chiều dài cánh hoa (petal-length), chiều rộng cánh hoa(petal-width ).Và có 3 classes mà chúng ta cần dự đoán đó là: Iris-setosa, Iris-versicolor, Iris-virginica. Tất nhiên mỗi loài hoa sẽ có các feature khác nhau để mô hình nó phân biệt và đưa ra dự đoán chính xác.\n3.3.3. Thống kê các thuộc tính của dữ liệu Bây giờ chúng ta sẽ xem chi tiết hơn về các features: Bao gồm count(số lượng), mean(chiều dài, chiều rộng trung bình), min và max. Cụ thể như sau:\nprint(dataset.describe())\nsepal-length sepal-width petal-length petal-width\ncount 150.000000 150.000000 150.000000 150.000000\nmean 5.843333 3.054000 3.758667 1.198667\nstd 0.828066 0.433594 1.764420 0.763161\nmin 4.300000 2.000000 1.000000 0.100000\n25% 5.100000 2.800000 1.600000 0.300000\n50% 5.800000 3.000000 4.350000 1.300000\n75% 6.400000 3.300000 5.100000 1.800000\nmax 7.900000 4.400000 6.900000 2.500000\nNhư chung ta thấy ở trên độ dài và rộng của từng feature thuộc cùng đơn vị (cm) và cùng nằm trong khoảng từ 0-8 cm.\n3.3.4. Phân bố dữ liệu Bây giờ chúng ta xem số lượng của từng loài hoa ( từng class) bằng cách:\nprint(dataset.groupby('class').size())\nVà kết quả sẽ là:\nclass\nIris-setosa 50\nIris-versicolor 50\nIris-virginica 50\nChúng ta thấy số lượng hoa ( class) đồng đều nhau và cùng là 50.\nCode đầy đủ cho các bước trên như sau ok ok:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  # summarize the data\r from pandas import read_csv\r# Load dataset\r url = \u0026#34;https://raw.githubusercontent.com/jbrownlee/Datasets/master/iris.csv\u0026#34;\rnames = [\u0026#39;sepal-length\u0026#39;, \u0026#39;sepal-width\u0026#39;, \u0026#39;petal-length\u0026#39;, \u0026#39;petal-width\u0026#39;, \u0026#39;class\u0026#39;]\rdataset = read_csv(url, names=names)\r# shape\r print(dataset.shape)\r# head\r print(dataset.head(20))\r# descriptions\r print(dataset.describe())\r# class distribution\r print(dataset.groupby(\u0026#39;class\u0026#39;).size())\r  3.4. Trực quan dữ liệu Chúng ta đã biết được cơ bản về dữ liệu, bây giờ là lúc chúng ta trực quan hóa bằng biểu đồ.\nBước này giúp chúng ta hiểu rõ hơn phân bố chi tiết từng loài hoa(class) bằng cách nhìn vào các biểu đồ sau:\nsẽ có phần tiếp theo nhé\u0026hellip;\nhello ok hãy chờ đợi\n","description":"Đây là bài toán đầu tiên trong loạt bài ML cơ bản","id":0,"section":"posts","tags":["tutorial","machine learning"],"title":"Giải bài toán Machine Learning đầu tiên ","uri":"https://tranvanly107.github.io/posts/first-machine-learning/"}]